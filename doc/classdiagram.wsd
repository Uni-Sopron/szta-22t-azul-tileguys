@startuml Azul classes
class Container{
    + supply[BLUE, YELLOW, RED, BLACK, BLUESTAR] : Array[20,20,20,20,20]
    

}
note right: those are Array[i] maximums

Container <|-- Disc
class Disc{
    disc[BLUE, YELLOW, RED, BLACK, BLUESTAR] : Array[4,4,4,4,4]
    __methods__
    + getSameColoredTiles(Tile)
    + dropTiles(disc,centerpool)
    __setter__
    + setDisc()
}
Container <|-- CenterPool
CenterPool .. Disc
class CenterPool{
    + centerpool[BLUE, YELLOW, RED, BLACK, BLUESTAR] : Array[20,20,20,20,20]
    __setter__
    + Disc.dropTiles()
    __methods__
    + getSameColoredTiles(Tile)
}

Container <|--Tiles
enum Tiles{
    BLUE
    YELLOW
    RED
    BLACK
    BLUESTAR
}

Container <|-- PlayerBoard
class PlayerBoard{
    + points : int
    __methods__
    + calculatePoints()

}

PlayerBoard +-- SampleTileRow
class SampleTileRow{
    row[] : Array[Tile]
    __setter__
    setRow()
    __getter__
    getRow()
    __methods__


}
note left: setter makes all the rows (0-4)

PlayerBoard <|-- Wall
class Wall{
    wall[4][4] : Array[Tile][Tile]
    __methods__
    + static int addPoints()
}

PlayerBoard <|-- BrokenTiles
class BrokenTiles{
    + brokenTiles[6] : Array[Tile]
    __setter__
    + setBrokenTiles()
    __getter__
    - getBrokenTiles()
    __methods__
     + static int minusPoints()

}

@enduml